<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Platform</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Platform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

movement_duration   = 60;
position_offset     = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var next_position = positions[position_offset];

// :(
var next_position_x = next_position[0];
var next_position_y = next_position[1];
/*
var new_x = floor((next_position_x - x) / movement_duration);
var new_y = floor((next_position_y - y) / movement_duration);

if (abs(new_x) &gt; abs(next_position_x - x)) {
    show_debug_message("this happened on x");
    new_x = next_position_x - x;
}

if (abs(new_y) &gt; abs(next_position_y - y)) {
    show_debug_message("this happened on x");
    new_y = next_position_y - y;
}

x += new_x;
y += new_y;

if (x == next_position_x &amp;&amp; y == next_position_y) {
    show_debug_message("object reached position at offset: " + string(position_offset));
    if (position_offset + 1 &gt;= array_length_1d(positions)) {
        position_offset = 0;
    } else {
        position_offset++;
    }
}
*/

var spd = 1;

if (point_distance(x, y, next_position_x, next_position_y) &gt; spd) {
    move_towards_point(next_position_x, next_position_y, spd);
    
    if (place_meeting(x, y - 1, Player)) {
        with (Player) {
            
            vspd = 0;    
        
            var playerSpeedX;   

        
            if (next_position_x - x &gt; 0) {
                playerSpeedX = spd;
            } else if (next_position_x - x &lt; 0) {
                playerSpeedX = -spd;
            } else {
                playerSpeedX = 0;
            }
            
            x += playerSpeedX;
            y = other.y - (other.sprite_height/2);
         
        }
    }
    
} else {
    if (position_offset + 1 &gt;= array_length_1d(positions)) {
        position_offset = 0;
    } else {
        position_offset++;
    }
    //speed = 0;
    show_debug_message("reached"); 
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
